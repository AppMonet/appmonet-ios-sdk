<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1010"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <PreActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "KEYS=${SRCROOT}/keys.sh&#10;if [[ -f &quot;$KEYS&quot; ]]; then&#10;    source $KEYS&#10;    CONSTANT_PATH=${PROJECT_DIR}/AppMonet/Main/AMOConstants.h&#10;    TMP_PATH=${PROJECT_DIR}/AppMonet/Main/AMOConstants.tmp&#10;    if [ &quot;${CONFIGURATION}&quot; = &quot;Debug&quot; ]; then&#10;        cat $CONSTANT_PATH | sed &quot;s/cdn.88-f.net/$STAGING_URL/&quot; &gt; $TMP_PATH&#10;        rm $CONSTANT_PATH&#10;        mv $TMP_PATH $CONSTANT_PATH&#10;    fi&#10;fi&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "82B02BA61FD6E745002B622E"
                     BuildableName = "AppMonet_Mopub.framework"
                     BlueprintName = "AppMonet_Mopub"
                     ReferencedContainer = "container:AppMonet.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PreActions>
      <PostActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "KEYS=${SRCROOT}/keys.sh&#10;if [[ -f &quot;$KEYS&quot; ]]; then&#10;    source $KEYS&#10;    CONSTANT_PATH=${PROJECT_DIR}/AppMonet/Main/AMOConstants.h&#10;    TMP_PATH=${PROJECT_DIR}/AppMonet/Main/AMOConstants.tmp&#10;    if [ &quot;${CONFIGURATION}&quot; = &quot;Debug&quot; ]; then&#10;        cat $CONSTANT_PATH | sed &quot;s/$STAGING_URL/cdn.88-f.net/&quot; &gt; $TMP_PATH&#10;        rm $CONSTANT_PATH&#10;        mv $TMP_PATH $CONSTANT_PATH&#10;    fi&#10;fi&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "82B02BA61FD6E745002B622E"
                     BuildableName = "AppMonet_Mopub.framework"
                     BlueprintName = "AppMonet_Mopub"
                     ReferencedContainer = "container:AppMonet.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PostActions>
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "NO"
            buildForRunning = "YES"
            buildForProfiling = "NO"
            buildForArchiving = "NO"
            buildForAnalyzing = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "820DCF861FD887A700005E5C"
               BuildableName = "App_Mopub.app"
               BlueprintName = "App_Mopub"
               ReferencedContainer = "container:AppMonet.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "82B02BA61FD6E745002B622E"
               BuildableName = "AppMonet_Mopub.framework"
               BlueprintName = "AppMonet_Mopub"
               ReferencedContainer = "container:AppMonet.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "82B02BA61FD6E745002B622E"
            BuildableName = "AppMonet_Mopub.framework"
            BlueprintName = "AppMonet_Mopub"
            ReferencedContainer = "container:AppMonet.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
      <Testables>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "820DCF9D1FD887A700005E5C"
               BuildableName = "App_MopubTests.xctest"
               BlueprintName = "App_MopubTests"
               ReferencedContainer = "container:AppMonet.xcodeproj">
            </BuildableReference>
         </TestableReference>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "820DCFA81FD887A700005E5C"
               BuildableName = "App_MopubUITests.xctest"
               BlueprintName = "App_MopubUITests"
               ReferencedContainer = "container:AppMonet.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "820DCF861FD887A700005E5C"
            BuildableName = "App_Mopub.app"
            BlueprintName = "App_Mopub"
            ReferencedContainer = "container:AppMonet.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "82B02BA61FD6E745002B622E"
            BuildableName = "AppMonet_Mopub.framework"
            BlueprintName = "AppMonet_Mopub"
            ReferencedContainer = "container:AppMonet.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
      <LocationScenarioReference
         identifier = "com.apple.dt.IDEFoundation.CurrentLocationScenarioIdentifier"
         referenceType = "1">
      </LocationScenarioReference>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "82B02BA61FD6E745002B622E"
            BuildableName = "AppMonet_Mopub.framework"
            BlueprintName = "AppMonet_Mopub"
            ReferencedContainer = "container:AppMonet.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
      <PostActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "# redirect stdout &amp; stderr to a logfile&#10;exec &gt; /tmp/${PROJECT_NAME}_archive.log 2&gt;&amp;1&#10;&#10;UNIVERSAL_OUTPUTFOLDER=&quot;${BUILD_DIR}/${CONFIGURATION}-universal&quot;&#10;SIMULATOR_OUTPUTFOLDER=&quot;${BUILD_DIR}/${CONFIGURATION}-iphonesimulator&quot;&#10;REAL_DEVICE_OUTPUTFOLDER=&quot;${BUILD_DIR}/${CONFIGURATION}-iphoneos&quot;&#10;&#10;if [ &quot;true&quot; == ${ALREADYINVOKED:-false} ]; then&#10;echo &quot;RECURSION: Detected, stopping&quot;&#10;exit 0;&#10;fi&#10;&#10;export ALREADYINVOKED=&quot;true&quot;&#10;&#10;# make sure that the output directory exists&#10;mkdir -p &quot;${UNIVERSAL_OUTPUTFOLDER}&quot;&#10;&#10;echo &quot;Building for iPhoneSimulator&quot;&#10;xcodebuild -workspace &quot;${WORKSPACE_PATH}&quot; \&#10;-scheme &quot;${TARGET_NAME}&quot; \&#10;-configuration ${CONFIGURATION} \&#10;-sdk iphonesimulator \&#10;-destination &apos;platform=iOS Simulator,name=iPhone X&apos; \&#10;ONLY_ACTIVE_ARCH=NO ARCHS=&apos;i386 x86_64&apos; \&#10;CLANG_ENABLE_MODULE_DEBUGGING=NO \&#10;BUILD_DIR=&quot;${BUILD_DIR}&quot; BUILD_ROOT=&quot;${BUILD_ROOT}&quot; \&#10;ENABLE_BITCODE=YES OTHER_CFLAGS=&quot;-fembed-bitcode&quot; \&#10;BITCODE_GENERATION_MODE=bitcode clean build 2&gt;&amp;1 | perl -sne &apos;$|=1;print &quot;\t[xcode] $_&quot;;&apos;&#10;&#10;#xcodebuild -workspace &quot;${WORKSPACE_PATH}&quot; -configuration ${CONFIGURATION} -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO BUILD_DIR=&quot;${BUILD_DIR}&quot; BUILD_ROOT=&quot;${BUILD_ROOT}&quot; clean build&#10;&#10;# Step 1. Copy the framework structure (from iphoneos build) to the universal folder&#10;echo &quot;Copying to output folder&quot;&#10;cp -R &quot;${ARCHIVE_PRODUCTS_PATH}${INSTALL_PATH}/&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}&quot;&#10;&#10;# Step 2. Copy Swift modules from iphonesimulator build (if it exists) to the copied framework directory&#10;FRAMEWORK_ROOT=&quot;${UNIVERSAL_OUTPUTFOLDER}/${TARGET_NAME}.framework&quot;&#10;SIMULATOR_SWIFT_MODULES_DIR=&quot;${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/${TARGET_NAME}.framework/Modules/${TARGET_NAME}.swiftmodule/.&quot;&#10;if [ -d &quot;${SIMULATOR_SWIFT_MODULES_DIR}&quot; ]; then&#10;cp -R &quot;${SIMULATOR_SWIFT_MODULES_DIR}&quot; &quot;${FRAMEWORK_ROOT}/Modules/${TARGET_NAME}.swiftmodule&quot;&#10;fi&#10;&#10;# step 3a - copy the modulemap into the framework&#10;&#10;echo &quot;making module directory @ $FRAMEWORK_ROOT&quot;&#10;mkdir &quot;$FRAMEWORK_ROOT/Modules&quot;&#10;&#10;MODULEMAP_TEMPLATE=&quot;$SRCROOT/AppMonet/Mopub/appmonet-mopub-ios-sdk.modulemap&quot;&#10;if [[ ! -f &quot;$MODULEMAP_TEMPLATE&quot; ]]; then&#10;echo &quot;missing modulemap @ $MODULEMAP_TEMPLATE !&quot;&#10;exit 1&#10;fi&#10;&#10;echo &quot;templating the modulemap with $TARGET_NAME into the framework&quot;&#10;sed -e &quot;s,@product@,$TARGET_NAME,g&quot; &quot;$MODULEMAP_TEMPLATE&quot; &gt; &quot;$FRAMEWORK_ROOT/Modules/module.modulemap&quot;&#10;&#10;# Step 3. Create universal binary file using lipo and place the combined executable in the copied framework directory&#10;echo &quot;Combining executables&quot;&#10;# executable without simulator&#10;lipo -create -output &quot;${UNIVERSAL_OUTPUTFOLDER}/${EXECUTABLE_PATH}&quot; \&#10;&quot;${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/${EXECUTABLE_PATH}&quot; \&#10;&quot;${ARCHIVE_PRODUCTS_PATH}${INSTALL_PATH}/${EXECUTABLE_PATH}&quot;&#10;&#10;#lipo -create -output &quot;${UNIVERSAL_OUTPUTFOLDER}/${EXECUTABLE_PATH}&quot; \&#10;#&quot;${ARCHIVE_PRODUCTS_PATH}/${CONFIGURATION}-iphonesimulator/${EXECUTABLE_PATH}&quot; \&#10;#&quot;${ARCHIVE_PRODUCTS_PATH}${INSTALL_PATH}/${EXECUTABLE_PATH}&quot;&#10;&#10;echo &quot;Combining executables end&quot;&#10;&#10;# Step 5. Convenience step to copy the framework to the project&apos;s directory&#10;echo &quot;Copying to project dir&quot;&#10;mkdir &quot;${PROJECT_DIR}/${CONFIGURATION}-universal&quot;&#10;mkdir &quot;${PROJECT_DIR}/${CONFIGURATION}-iphonesimulator&quot;&#10;mkdir &quot;${PROJECT_DIR}/${CONFIGURATION}-iphoneos&quot;&#10;&#10;yes | cp -RfL &quot;${UNIVERSAL_OUTPUTFOLDER}/${FULL_PRODUCT_NAME}&quot; &quot;${PROJECT_DIR}/${CONFIGURATION}-universal&quot;&#10;yes | cp -RfL &quot;${SIMULATOR_OUTPUTFOLDER}/${FULL_PRODUCT_NAME}&quot; &quot;${PROJECT_DIR}/${CONFIGURATION}-iphonesimulator&quot;&#10;#yes | cp -RfL &quot;${REAL_DEVICE_OUTPUTFOLDER}/${FULL_PRODUCT_NAME}&quot; &quot;${PROJECT_DIR}/${CONFIGURATION}-iphoneos&quot;&#10;yes | cp -RfL &quot;${ARCHIVE_PRODUCTS_PATH}${INSTALL_PATH}/${FULL_PRODUCT_NAME}&quot; &quot;${PROJECT_DIR}/${CONFIGURATION}-iphoneos&quot;&#10;&#10;buildNumber=&quot;$(/usr/libexec/PlistBuddy -c &quot;Print CFBundleShortVersionString&quot; &quot;$SRCROOT/AppMonet/Mopub/AppMonet_Mopub.plist&quot;)&quot;&#10;&#10;echo $buildNumber -&gt; &quot;${PROJECT_DIR}/framework_info_mopub&quot;&#10;&#10;open &quot;${PROJECT_DIR}&quot;&#10;"
               shellToInvoke = "/bin/bash">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "82B02BA61FD6E745002B622E"
                     BuildableName = "AppMonet_Mopub.framework"
                     BlueprintName = "AppMonet_Mopub"
                     ReferencedContainer = "container:AppMonet.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PostActions>
   </ArchiveAction>
</Scheme>
